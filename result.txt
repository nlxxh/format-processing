单词类别  单词值
关键字  int
标识符  aaa
逗号  ,
标识符  b
逗号  ,
标识符  c
逗号  ,
标识符  m
分号  ;
关键字  long
标识符  p
逗号  ,
标识符  q
分号  ;
关键字  float
标识符  d
逗号  ,
标识符  e
分号  ;
关键字  double
标识符  lll
分号  ;
关键字  int
标识符  fun
左小括号  (
关键字  int
标识符  x1
逗号  ,
关键字  float
标识符  x2
右小括号  )
分号  ;
关键字  int
标识符  pro
左小括号  (
关键字  int
标识符  y1
逗号  ,
关键字  int
标识符  y2
右小括号  )
分号  ;
关键字  int
标识符  fun
左小括号  (
关键字  int
标识符  x1
逗号  ,
关键字  float
标识符  x2
右小括号  )
左大括号  {
关键字  char
标识符  xxx
数组  [5]
分号  ;
关键字  char
标识符  a1
逗号  ,
标识符  a2
逗号  ,
标识符  a3
逗号  ,
标识符  a4
分号  ;
标识符  aaa
赋值号  =
整型常量  123
分号  ;
标识符  b
赋值号  =
整型常量  0123
分号  ;
标识符  c
赋值号  =
整型常量  0X156
分号  ;
标识符  m
赋值号  =
整型常量  10
分号  ;
标识符  d
赋值号  =
浮点型常量  123f
分号  ;
标识符  e
赋值号  =
浮点型常量  13.23
分号  ;
标识符  a1
赋值号  =
字符型常量  'a'
分号  ;
标识符  a2
赋值号  =
字符型常量  'A'
分号  ;
标识符  a3
赋值号  =
字符型常量  'd'
分号  ;
标识符  xxx
赋值号  =
字符串常量  "dsad"
分号  ;
标识符  p
赋值号  =
长整型常量  1222L
分号  ;
标识符  q
赋值号  =
长整型常量  12l
分号  ;
关键字  if
左小括号  (
标识符  x1
大于等于号  >=
标识符  x2
且  &&
标识符  x1
不等于号  !=
整型常量  0
右小括号  )
左大括号  {
标识符  x1
赋值号  =
标识符  a3
等于号  ==
整型常量  4
或  ||
标识符  a2
不等于号  !=
整型常量  6
且  &&
标识符  e
大于号  >
整型常量  1
且  &&
标识符  e
小于号  <
整型常量  5
且  &&
标识符  d
大于等于号  >=
整型常量  1
且  &&
标识符  d
小于等于号  <=
整型常量  9
且  &&
标识符  aaa
加号  +
左小括号  (
整型常量  10
减号  -
标识符  b
右小括号  )
乘号  *
整型常量  5
除号  /
左小括号  (
标识符  d
求余号  %
整型常量  10
右小括号  )
加号  +
标识符  a1
分号  ;
标识符  m
赋值号  =
标识符  x1
分号  ;
右大括号  }
关键字  else
标识符  m
赋值号  =
标识符  x2
分号  ;
关键字  if
左小括号  (
标识符  x1
大于号  >
整型常量  3
且  &&
标识符  x1
小于号  <
整型常量  8
或  ||
标识符  x1
加号  +
标识符  x2
等于号  ==
整型常量  10
或  ||
标识符  x1
不等于号  !=
标识符  x2
右小括号  )
标识符  m
赋值号  =
标识符  x1
加号  +
标识符  x2
分号  ;
关键字  return
标识符  m
分号  ;
右大括号  }
关键字  int
标识符  pro
左小括号  (
关键字  int
标识符  y1
逗号  ,
关键字  int
标识符  y2
右小括号  )
左大括号  {
关键字  int
标识符  i
逗号  ,
标识符  j
逗号  ,
标识符  k
分号  ;
标识符  k
赋值号  =
整型常量  3
分号  ;
关键字  while
左小括号  (
整型常量  1
右小括号  )
左大括号  {
标识符  y1
赋值号  =
整型常量  9
分号  ;
关键字  for
左小括号  (
标识符  i
赋值号  =
整型常量  0
分号  ;
标识符  i
小于号  <
标识符  y1
分号  ;
标识符  i
赋值号  =
标识符  i
加号  +
整型常量  1
右小括号  )
关键字  for
左小括号  (
标识符  j
赋值号  =
标识符  i
分号  ;
标识符  j
小于等于号  <=
标识符  y2
分号  ;
标识符  j
赋值号  =
标识符  j
加号  +
整型常量  2
右小括号  )
左大括号  {
关键字  if
左小括号  (
标识符  j
等于号  ==
标识符  i
加号  +
标识符  k
右小括号  )
关键字  break
分号  ;
关键字  else
关键字  if
左小括号  (
标识符  j
等于号  ==
标识符  i
加号  +
标识符  k
减号  -
整型常量  1
右小括号  )
关键字  continue
分号  ;
右大括号  }
右大括号  }
关键字  if
左小括号  (
标识符  aaa
加号  +
标识符  i
小于等于号  <=
标识符  j
右小括号  )
左大括号  {
关键字  if
左小括号  (
标识符  y1
等于号  ==
标识符  y2
右小括号  )
左大括号  {
标识符  j
赋值号  =
标识符  j
加号  +
整型常量  1
分号  ;
标识符  k
赋值号  =
标识符  j
乘号  *
标识符  k
减号  -
整型常量  5
除号  /
标识符  k
分号  ;
右大括号  }
关键字  else
标识符  j
赋值号  =
整型常量  1
分号  ;
右大括号  }
关键字  while
左小括号  (
标识符  i
加号  +
标识符  j
等于号  ==
整型常量  1
且  &&
标识符  j
等于号  ==
左小括号  (
标识符  i
加号  +
整型常量  7
右小括号  )
乘号  *
整型常量  8
右小括号  )
左大括号  {
关键字  while
左小括号  (
标识符  i
小于等于号  <=
标识符  j
或  ||
标识符  j
不等于号  !=
标识符  i
加号  +
整型常量  3
右小括号  )
标识符  j
赋值号  =
标识符  j
加号  +
左小括号  (
整型常量  3
减号  -
整型常量  6
右小括号  )
乘号  *
整型常量  7
分号  ;
右大括号  }
关键字  return
标识符  j
分号  ;
右大括号  }
关键字  float
标识符  x
逗号  ,
标识符  y
分号  ;
外部变量定义：
    类型：int
    变量名：
      ID：aaa
      ID：b
      ID：c
      ID：m
外部变量定义：
    类型：long
    变量名：
      ID：p
      ID：q
外部变量定义：
    类型：float
    变量名：
      ID：d
      ID：e
外部变量定义：
    类型：double
    变量名：
      ID：lll
函数定义：
    类型：int
    函数名：fun
    函数形参：
      类型：int , 参数名：x1
      类型：float , 参数名：x2
    复合语句：
函数定义：
    类型：int
    函数名：pro
    函数形参：
      类型：int , 参数名：y1
      类型：int , 参数名：y2
    复合语句：
函数定义：
    类型：int
    函数名：fun
    函数形参：
      类型：int , 参数名：x1
      类型：float , 参数名：x2
    复合语句：
      复合语句的变量定义：
        LOCAL VAR_NAME：
          类型：char
          VAR_NAME：
            ID：xxx
          类型：char
          VAR_NAME：
            ID：a1
            ID：a2
            ID：a3
            ID：a4
      复合语句的语句部分：
            运算符：=
              ID：aaa
              ID：123
            运算符：=
              ID：b
              ID：0123
            运算符：=
              ID：c
              ID：0X156
            运算符：=
              ID：m
              ID：10
            运算符：=
              ID：d
              ID：123f
            运算符：=
              ID：e
              ID：13.23
            运算符：=
              ID：a1
              ID：'a'
            运算符：=
              ID：a2
              ID：'A'
            运算符：=
              ID：a3
              ID：'d'
            运算符：=
              ID：xxx
              ID："dsad"
            运算符：=
              ID：p
              ID：1222L
            运算符：=
              ID：q
              ID：12l
        条件语句(IF_THEN_ELSE)：
          条件：
            运算符：&&
            运算符：>=
              ID：x1
              ID：x2
            运算符：!=
              ID：x1
              ID：0
          IF子句：
    复合语句：
      复合语句的变量定义：
        LOCAL VAR_NAME：
      复合语句的语句部分：
            运算符：=
              ID：x1
            运算符：||
            运算符：==
              ID：a3
              ID：4
            运算符：&&
            运算符：&&
            运算符：&&
            运算符：&&
            运算符：&&
            运算符：!=
              ID：a2
              ID：6
            运算符：>
              ID：e
              ID：1
            运算符：<
              ID：e
              ID：5
            运算符：>=
              ID：d
              ID：1
            运算符：<=
              ID：d
              ID：9
            运算符：+
            运算符：+
              ID：aaa
            运算符：/
            运算符：*
            运算符：-
              ID：10
              ID：b
              ID：5
            运算符：%
              ID：d
              ID：10
              ID：a1
            运算符：=
              ID：m
              ID：x1
          ELSE子句：
            运算符：=
              ID：m
              ID：x2
        条件语句(IF_THEN)：
          条件：
            运算符：||
            运算符：||
            运算符：&&
            运算符：>
              ID：x1
              ID：3
            运算符：<
              ID：x1
              ID：8
            运算符：==
            运算符：+
              ID：x1
              ID：x2
              ID：10
            运算符：!=
              ID：x1
              ID：x2
          IF子句：
            运算符：=
              ID：m
            运算符：+
              ID：x1
              ID：x2
        返回语句：
              ID：m
函数定义：
    类型：int
    函数名：pro
    函数形参：
      类型：int , 参数名：y1
      类型：int , 参数名：y2
    复合语句：
      复合语句的变量定义：
        LOCAL VAR_NAME：
          类型：int
          VAR_NAME：
            ID：i
            ID：j
            ID：k
      复合语句的语句部分：
            运算符：=
              ID：k
              ID：3
        WHILE语句：
          条件：
              ID：1
          WHILE子句：
    复合语句：
      复合语句的变量定义：
        LOCAL VAR_NAME：
      复合语句的语句部分：
            运算符：=
              ID：y1
              ID：9
        FOR语句：
          赋初值：
            运算符：=
              ID：i
              ID：0
          条件：
            运算符：<
              ID：i
              ID：y1
          增值：
            运算符：=
              ID：i
            运算符：+
              ID：i
              ID：1
          FOR子句：
        FOR语句：
          赋初值：
            运算符：=
              ID：j
              ID：i
          条件：
            运算符：<=
              ID：j
              ID：y2
          增值：
            运算符：=
              ID：j
            运算符：+
              ID：j
              ID：2
          FOR子句：
    复合语句：
      复合语句的变量定义：
        LOCAL VAR_NAME：
      复合语句的语句部分：
        条件语句(IF_THEN_ELSE)：
          条件：
            运算符：==
              ID：j
            运算符：+
              ID：i
              ID：k
          IF子句：
        BREAK语句：
          ELSE子句：
        条件语句(IF_THEN)：
          条件：
            运算符：==
              ID：j
            运算符：-
            运算符：+
              ID：i
              ID：k
              ID：1
          IF子句：
        CONTINUE语句：
        条件语句(IF_THEN)：
          条件：
            运算符：<=
            运算符：+
              ID：aaa
              ID：i
              ID：j
          IF子句：
    复合语句：
      复合语句的变量定义：
        LOCAL VAR_NAME：
      复合语句的语句部分：
        条件语句(IF_THEN_ELSE)：
          条件：
            运算符：==
              ID：y1
              ID：y2
          IF子句：
    复合语句：
      复合语句的变量定义：
        LOCAL VAR_NAME：
      复合语句的语句部分：
            运算符：=
              ID：j
            运算符：+
              ID：j
              ID：1
            运算符：=
              ID：k
            运算符：-
            运算符：*
              ID：j
              ID：k
            运算符：/
              ID：5
              ID：k
          ELSE子句：
            运算符：=
              ID：j
              ID：1
        WHILE语句：
          条件：
            运算符：&&
            运算符：==
            运算符：+
              ID：i
              ID：j
              ID：1
            运算符：==
              ID：j
            运算符：*
            运算符：+
              ID：i
              ID：7
              ID：8
          WHILE子句：
    复合语句：
      复合语句的变量定义：
        LOCAL VAR_NAME：
      复合语句的语句部分：
        WHILE语句：
          条件：
            运算符：||
            运算符：<=
              ID：i
              ID：j
            运算符：!=
              ID：j
            运算符：+
              ID：i
              ID：3
          WHILE子句：
            运算符：=
              ID：j
            运算符：+
              ID：j
            运算符：*
            运算符：-
              ID：3
              ID：6
              ID：7
        返回语句：
              ID：j
外部变量定义：
    类型：float
    变量名：
      ID：x
      ID：y
遍历成功！

